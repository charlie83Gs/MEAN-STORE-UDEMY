# ------------------------------------------------------
# Grahql Schema Definitions
# This document defines all types and queries for the graphql api
# ------------------------------------------------------


# ------------------------------------------------------
# Types
# ------------------------------------------------------

enum Role {
    CLIENT
    ADMIN
}

type User {
    id: ID
    name: String!
    lastname: String!
    email: String!
    password: String!
    registerDate: String!
    birthday: String!
    role: Role!
}

type UserResult implements Result {
    users: [User!]!
    status: Boolean!
    message: String!
}

type LoginResult implements Result {
    token: String
    status: Boolean!
    message: String!
}

type RegisterResult implements Result {
    user: User
    status: Boolean!
    message: String!
}

type AuthResult implements Result {
    user: User
    status: Boolean!
    message: String!
}


# ------------------------------------------------------
# Mutations
# ------------------------------------------------------

#input to add user data in the registry
input UserInput {
    id:ID!
    name: String!
    lastname: String!
    email: String!
    password: String!
    birthday: String!
    role: Role=CLIENT
}

type Mutation {
    register(user: UserInput!): RegisterResult!

}

# ------------------------------------------------------
# Queries
# ------------------------------------------------------

type Query {
    # Users in database it could be Client/Admin
    users: UserResult
    login (email: String!, password: String!): LoginResult
    auth: AuthResult
}

# ------------------------------------------------------
# Interfaces
# ------------------------------------------------------

# required properties for api reponses
interface Result {
    status: Boolean!
    message: String!
}